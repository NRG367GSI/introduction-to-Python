import easygui as gui
#gui.msgbox("Сообщение!", "Название окна", "Кнопка")
# нет кнобки будит кнобка OK
#gui.msgbox("Сообщение!", "Название окна")
# нет названия окна будит окно без нозвания и без названия кеопки параметры позиционные
#gui.msgbox("Сообщение!")
# когда нужно передать параметр кнобке минуя все остальные пораметры
#gui.msgbox("Сообщение!", ok_button = "Кнопка")

# ccbox () предоставляет собой окно с двумя кнобками выбора и возвращает True и False соответственно
'''ccbox(msg = " ",title = " ",choices = (‘C[o]ntinue’,C[a]ncel),image = None,
                                                                 default_choice = “C[o]ntinue”,
                                                                 cancel_choice = “C[a]ncel”)

Примечание. [O] в C [o] ntinue представляет собой сочетание клавиш, то есть ввод O на клавиатуре
эквивалентен нажатию кнопки «Продолжить».
'''
#gui.ccbox(msg = "Я вам нравлюсь?",title = "Признание",choices = ("лайк","неприязнь"))
# присвоение результаиа выбора переменной
#out = gui.ccbox(msg = "Я вам нравлюсь?",title = "Признание",choices = ("лайк","неприязнь"))
#print(out)

# Окно выбора с кнобкой Yes и No, возвращает True или False
#out = gui.ynbox(msg = "Я вам нравлюсь?",title = "Признание")
#print("Ваш выбор:",out)

#buttonbox () обеспечивает функцию нескольких кнопок, его использование выглядит следующим образом:

# buttonbox(msg=’’, title=’ ', choices=(‘Button[1]’, ‘Button[2]’, ‘Button[3]’), image=None,
#                                                                               images=None,
#                                                                               default_choice=None, 
#                                                                               cancel_choice=None, 
#                                                                               callback=None, 
#                                                                               run=True)
'''
count = 0
while count != 4:
    print(gui.buttonbox(choices =('One','Two','Three','Four'))) # Возвращает 'One','Two','Three','Four'
    count += 1
'''
# использование изображения в окне, для этого понадобится установить модуль pillow
'''
fin = gui.buttonbox(msg = "Я вам нравлюсь?",choices = ('лайк','неприязнь','рулон'), image = "2.jpg",title = "Процедура признания")
while True:
    if fin == "рулон" or fin == "неприязнь":
        fin = gui.buttonbox(msg = "Я вам нравлюсь?",choices = ('лайк','неприязнь','рулон'),image = "2.jpg",title = "Процедура признания")
    else :
        gui.msgbox("Ты мне тоже нравишься ^ _ ^ Я люблю тебя больше, чем свое сердце")
        break
'''

# 6. Как использовать функцию indexbox () в Easy GUI
'''
boolbox(msg='Shall I continue?', 
        title=' ', 
        choices=('[Y]es', '[N]o'), 
        image=None, 
        default_choice='Yes', 
        cancel_choice=‘No’)
совпадает с buttonbox (). Разница в том, что когда пользователь выбирает первую кнопку,
он возвращает порядковый номер, выбраннй кнобки от 0 до 3 в данном случае.
'''
#out = gui.indexbox(choices =('One','Two','Three','Four'))
#print("Ваш выбор:",out)

#7. Как использовать boolbox () в EasyGui
'''
boolbox(msg=‘Shall I continue?’, 
        title=’ ‘, 
        choices=(’[Y]es’, 
        ‘[N]o’), 
        image=None, 
        default_choice=‘Yes’, 
        cancel_choice=‘No’)

Если выбрана первая кнопка, возвращается True, в противном случае возвращается False,
если не указать choices кнобки будут называться True и False
'''
# fin = gui.boolbox(msg = "Я вам нравлюсь?",
#                   title = "Признание", 
#                   choices=('[Y]es', '[N]o'))
# print(fin)

# 8. Как использовать selectionbox () в EasyGui
'''
choicebox(msg=‘Pick an item’, title=’’, choices=[], preselect=0, callback=None, run=True)

Choicebox () предоставляет пользователям список с возможностью выбора, 
используя последовательность (кортеж или список) в качестве параметров, 
и эти параметры сортируются в алфавитном порядке.

import os
m=list(os.listdir("Программа D: \\ py"))
easygui.choicebox(msg = "пожалуйста, выбери:",title = "",choices = m )
'''

# import os
# m=list([-21 ,13, -8, 5, 3, 2, 1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21])
# print(gui.choicebox(msg = "пожалуйста, выбери:",title = "",choices = m )) # Возвращает выбранный элемент списка

# 9. Как использовать multchoicebox () в EasyGui
'''
multchoicebox(msg=‘Pick an item’, title=’’, choices=[], preselect=0, callback=None, run=True)

Функция multchoicebox() также предоставляет список вариантов выбора.В отличие от choicebox (), 
multchoicebox() позволяет пользователям выбирать 0, 1 или несколько вариантов одновременно.
'''

# import os
# m=list([-21 ,13, -8, 5, 3, 2, 1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21])
# print(gui.multchoicebox(msg = "пожалуйста, выбери:",title = "",choices = m )) # Возвращает список выбранных элементов

# 10. Как использовать enterbox () в EasyGui
'''
enterbox(msg=‘Enter something.’, title=’ ‘, default=’’, strip=True, image=None, root=None)

enterbox () предоставляет пользователю простейшее поле ввода, 
а возвращаемое значение - строка, введенная пользователем.

Возвращаемое значение по умолчанию автоматически удаляет начальные и конечные пробелы. 
Если вам нужно сохранить начальные и конечные пробелы, установите для параметра strip = False.
'''
#fin = gui.enterbox(msg="Пожалуйста, введите имя человека, который вам нравится:",title = "Признание")
#print(fin) # Возвращает введенный текст

# 11. Как использовать integerbox () в Easy GUI
'''
integerbox(msg=’’, title=’ ', default=None, lowerbound=0, upperbound=99, image=None, root=None)

integerbox () предоставляет пользователям простое поле ввода.
Пользователи могут вводить только целочисленные значения в
пределах диапазона (нижний параметр устанавливает минимальное значение,
верхний параметр устанавливает максимальное значение),
в противном случае пользователю потребуется повторно ввести значение.

print(gui.integerbox("Пожалуйста, введите число, не превышающее одну тысячу",
                     "цифровой",
                     lowerbound = 0,
                     upperbound = 1000))
'''

# 12. Как использовать multenterbox () в Easy GUI
'''
multenterbox(msg=‘Fill in values for the fields.’, title=’ ', fields=[], values=[], callback=None, run=True)

multenterbox () предоставляет пользователям несколько простых полей ввода.
Если значение, введенное пользователем, меньше параметра, значение в возвращаемом списке заполняется параметром,
введенным пользователем с пустой строкой.
Если пользователь вводит больше значений, чем параметров, значение в возвращаемом списке будет сокращено до
количества вариантов.
Если пользователь отменяет операцию, возвращается значение списка в домене или значение None.

list1 = ["имя пользователя",'настоящее имя',"Фиксированный телефон",'номер мобильного телефона','QQ','Email']
fin = gui.multenterbox("текст окна можно и переменную",
                        title = "Регистрационная информация Регистрация",
                        fields = (list1)) # Возвращает список
print(fin)
'''

# 13. Как использовать пароль () в Easy GUI
'''
passwordbox(msg=‘Enter your password.’, title=’ ‘, default=’’, image=None, root=None)

passwordbox () имеет тот же стиль, что и enterbox (), за исключением того, что содержимое, введенное пользователем,
отображается со звездочкой (*). Эта функция возвращает строку, введенную пользователем:
'''
#fin = gui.passwordbox("Пожалуйста, введите пароль")
#print(fin)

# 14. Как использовать multpassword () в EasyGui
'''
multpasswordbox(msg=‘Fill in values for the fields.’, title=’ ', fields=(), values=(), callback=None, run=True)

multpasswordbox () использует тот же интерфейс, что и multenterbox (), но когда он отображается, 
последнее поле ввода отображается как пароль (*)
'''
#list1 = ["имя пользователя","пароль"]
#fin = gui.multpasswordbox("Пожалуйста введите свой логин и пароль",title = "авторизоваться",fields = (list1))
#print(fin)

#15. Метод использования textbox () в Easy GUI:
'''
textbox(msg=’’, title=’ ‘, text=’’, codebox=False, callback=None, run=True)

Функция textbox () будет отображать текстовое содержимое (автоматически переносить) пропорциональным шрифтом 
(для параметра codebox = True по умолчанию установлен моноширинный шрифт) .Эта функция подходит для отображения 
обычного письменного текста.

Примечание. Параметр text устанавливает содержимое редактируемой текстовой области, которое может быть строкой, 
списком или типом предка.
f = open("processing.txt","r")
'''
#f = "не получилось открыть файл почему то"
#print(gui.textbox("файл",text = f,codebox = True)) # возвращает текст введенный

#16. Как использовать diropenbox () в Easy GUI
'''
diropenbox(msg=None, title=None, default=None)

Функция diropenbox () используется для предоставления диалогового окна для возврата имени каталога,
выбранного пользователем (с полным путем), или None, если пользователь выбирает «Отмена».

Параметр по умолчанию используется для установки открытого каталога по умолчанию (убедитесь,
что заданный каталог уже существует).
'''
#fin = gui.diropenbox() #Открывается окно браузера и можно выбрать необходимый путь и возвращает его
#print(fin)

# 17. Как использовать fileopenbox () в Easy GUI
'''
fileopenbox(msg=None, title=None, default=’*’, filetypes=None, multiple=False)

Функция fileopenbox () используется для предоставления диалогового окна для возврата имени файла,
выбранного пользователем (с полным путем), или None, если пользователь выбирает «Отмена».
О способе установки параметра по умолчанию:
Параметр по умолчанию указывает путь по умолчанию, который обычно содержит один или несколько подстановочных знаков.
Если установлен параметр по умолчанию, fileopenbox () отображает путь и формат файла по умолчанию.
Параметр по умолчанию - «*», что соответствует всем форматам файлов.
Например:
default = "c: / fishc / *. py" показывает все файлы Python в папке C: \ fishc.
default = "c: /fishc/test*.py" отобразит все файлы Python в папке C: \ fishc, имя которой начинается с test.
О способе установки параметра filetypes:
Может быть списком строк, содержащих маски файлов, например: filetypes = ["* .txt"]
Это может быть список строк, последняя строка списка - это описание типа файла, например: 
filetypes = [".css", [".htm", “*.html”, “HTML files”]]
'''
#fin = gui.fileopenbox()
#print(fin)

# 18. Как использовать filesavebox () в Easy GUI
'''
filesavebox(msg=None, title=None, default=’’, filetypes=None)

Функция filesavebox () предоставляет диалоговое окно для выбора пути (с полным путем),
по которому файл должен быть сохранен. Если пользователь выбирает «Отмена», возвращается значение «Нет».
Параметр по умолчанию должен содержать имя файла (например, имя файла, который необходимо сохранить в данный момент),
конечно, он также может быть пустым или включать подстановочный знак для маски формата файла.
Для получения информации о способе установки параметра filetypes обратитесь к функции fileopenbox ().

out = gui.filesavebox()
print(out)
'''

# 19. Как использовать exceptiondox () в Easy GUI
'''
При использовании EasyGUI для написания программ с графическим интерфейсом иногда неизбежны исключения. 
Конечно, это зависит от того, как вы запускаете приложение.Когда ваше приложение выходит из строя, 
трассировка стека может быть выброшена или записана в функцию стандартного вывода stdout.

EasyGUI предоставляет лучший способ обработки исключений с помощью функции exceptionbox ().

Когда возникает исключение, exceptionbox () отобразит трассировку стека в codebox ()
и позволит вам выполнить дальнейшую обработку.
'''
try :
    int("abc")
except:
    gui.exceptionbox()